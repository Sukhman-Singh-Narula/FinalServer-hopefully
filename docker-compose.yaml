version: '3.8'

services:
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      app-network:
        aliases:
          - redis
          - redis-server
    # Add restart policy to ensure Redis stays running
    restart: always
    # Add healthcheck for Redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  app:
    image: python:3.9-slim
    volumes:
      - ./:/code
      - ./credentials:/code/credentials
    working_dir: /code
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - FIREBASE_CREDENTIALS_PATH=/code/credentials/firebase-credentials.json
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - redis
    networks:
      - app-network
    restart: on-failure
    command: >
      bash -c "
      echo 'deb http://archive.debian.org/debian/ stretch main contrib non-free' > /etc/apt/sources.list &&
      echo 'deb http://archive.debian.org/debian-security/ stretch/updates main contrib non-free' >> /etc/apt/sources.list &&
      apt-get -o Acquire::Check-Valid-Until=false update && 
      apt-get -y --no-install-recommends install ffmpeg redis-tools dnsutils procps &&
      echo '======= Testing DNS resolution: =======' &&
      getent hosts redis &&
      echo '======= Testing Redis connection: =======' &&
      redis-cli -h redis ping &&
      echo '======= Installing Python dependencies: =======' &&
      pip install -r requirements.txt &&
      echo '======= Starting application: =======' &&
      python run.py
      "

  worker-manager:
    image: python:3.9-slim
    volumes:
      - ./:/code
      - ./credentials:/code/credentials
    working_dir: /code
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - FIREBASE_CREDENTIALS_PATH=/code/credentials/firebase-credentials.json
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AGENT_WORKERS=2
    depends_on:
      - redis
    networks:
      - app-network
    restart: on-failure
    command: >
      bash -c "
      echo 'deb http://archive.debian.org/debian/ stretch main contrib non-free' > /etc/apt/sources.list &&
      echo 'deb http://archive.debian.org/debian-security/ stretch/updates main contrib non-free' >> /etc/apt/sources.list &&
      apt-get -o Acquire::Check-Valid-Until=false update && 
      apt-get -y --no-install-recommends install ffmpeg redis-tools dnsutils procps &&
      echo '======= Testing DNS resolution: =======' &&
      getent hosts redis &&
      echo '======= Testing Redis connection: =======' &&
      redis-cli -h redis ping &&
      echo '======= Installing Python dependencies: =======' &&
      pip install -r requirements.txt &&
      echo '======= Starting worker manager: =======' &&
      python app/redis/worker_manager.py
      "
      
  audio-worker:
    image: python:3.9-slim
    volumes:
      - ./:/code
      - ./credentials:/code/credentials
    working_dir: /code
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - FIREBASE_CREDENTIALS_PATH=/code/credentials/firebase-credentials.json
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - redis
    networks:
      - app-network
    restart: on-failure
    command: >
      bash -c "
      echo 'deb http://archive.debian.org/debian/ stretch main contrib non-free' > /etc/apt/sources.list &&
      echo 'deb http://archive.debian.org/debian-security/ stretch/updates main contrib non-free' >> /etc/apt/sources.list &&
      apt-get -o Acquire::Check-Valid-Until=false update && 
      apt-get -y --no-install-recommends install ffmpeg redis-tools dnsutils procps &&
      echo '======= Testing DNS resolution: =======' &&
      getent hosts redis &&
      echo '======= Testing Redis connection: =======' &&
      redis-cli -h redis ping &&
      echo '======= Installing Python dependencies: =======' &&
      pip install -r requirements.txt &&
      echo '======= Starting audio worker: =======' &&
      python start_workers.py
      "

volumes:
  redis-data:

networks:
  app-network:
    driver: bridge